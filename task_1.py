"""
1.	Написать программу, которая будет складывать, вычитать, умножать или делить
два числа. Числа и знак операции вводятся пользователем. После выполнения
вычисления программа не должна завершаться, а должна запрашивать новые данные
для вычислений. Завершение программы должно выполняться при вводе символа '0'
в качестве знака операции. Если пользователь вводит неверный знак
(не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и
снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, /
- условие завершения рекурсии - введена операция 0

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""
def calc_req():
    operator = input('введите операцию (+, -, *, / или 0 для выхода): ')
    if operator == '0':
        return ('Досвидания')
    first_num = int(input('Введите первое число: '))
    second_num = int(input('Введите второе число: '))
    if operator == '+':
        print(first_num + second_num)
        calc_req()
    elif operator == '-':
        print(first_num - second_num)
        calc_req()
    elif operator == '*':
        print(first_num * second_num)
        calc_req()
    else:
        if second_num == 0:
            print(
                'деление на 0 невозможно, это может привести к'
                'необратимым последствиям и стать причиной уничтожения нашей вселенной')
            calc_req()
        else:
            print(first_num / second_num)
            calc_req()


calc_req()
