"""
Задание 2.

Приведен код, который формирует из введенного числа
обратное по порядку входящих в него цифр.
Задача решена через рекурсию

Сделайте замеры времени выполнения кода с помощью модуля timeit

Попробуйте оптимизировать код, чтобы снизить время выполнения
Проведите повторные замеры

Подсказка: примените мемоизацию

Добавьте аналитику: что вы сделали и почему
Предложенный вариант работает не правильно, он добавляет 0 в конце
я решил своим методом и он оказался быстрее.
как тут использовать мемоизацию понятия не имею, если только использовать глобальную переменную и
ускорять последующие запуски. но я не осилил это реализовать.
"""

from timeit import timeit


def recursive_reverse(number):
    if number == 0:
        return str(number % 10)
    return f'{str(number % 10)}{recursive_reverse(number // 10)}'


def invert(n, res=0):
    '''
    :param n: int вводится пользователем
    :param res: int итоговое значение
    :return: int инвертированное число, введенное пользователем
    '''
    if n > 0:
        res = res * 10 + n % 10
        n = n // 10
        return invert(n, res)
    else:
        return res


print(
    timeit(
        "recursive_reverse(1231234164968321654168463516543216541321)",
        setup="from __main__ import recursive_reverse",
        number=1))
print(
    timeit(
        "invert(1231234164968321654168463516543216541321)",
        setup="from __main__ import invert",
        number=1))
